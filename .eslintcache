[{"C:\\Users\\Tom\\Desktop\\github\\test-for-yalantis\\src\\index.js":"1","C:\\Users\\Tom\\Desktop\\github\\test-for-yalantis\\src\\EmployeesPage.js":"2","C:\\Users\\Tom\\Desktop\\github\\test-for-yalantis\\src\\App.js":"3"},{"size":229,"mtime":1606411456000,"results":"4","hashOfConfig":"5"},{"size":7935,"mtime":1606661587239,"results":"6","hashOfConfig":"5"},{"size":181,"mtime":1606413389916,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16tqvqv",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tom\\Desktop\\github\\test-for-yalantis\\src\\index.js",[],"C:\\Users\\Tom\\Desktop\\github\\test-for-yalantis\\src\\EmployeesPage.js",["15","16"],"import { useEffect, useState } from \"react\";\r\nimport \"./EmployeesPage.css\";\r\n\r\nconst EmployeesPage = () => {\r\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase().split(\"\");\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n    ];\r\n\r\n    const [employees, setEmployees] = useState([]);\r\n    const [selectedEmp, setSelectedEmp] = useState([]);\r\n    const [checkboxes, setCheckboxes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\r\n            .then((res) => res.json())\r\n            .then((employeesData) => setEmployees([...employeesData]));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let data = JSON.parse(localStorage.getItem(\"checked\"));\r\n        if (data) {\r\n            setCheckboxes(data);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"checked\", JSON.stringify(checkboxes));\r\n    }, [checkboxes]);\r\n\r\n    useEffect(() => {\r\n        let data = JSON.parse(localStorage.getItem(\"selected\"));\r\n        if (data) {\r\n            setSelectedEmp(data);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"selected\", JSON.stringify(selectedEmp));\r\n    }, [selectedEmp]);\r\n\r\n    const chooseCheckbox = (checkboxId, e) => {\r\n        if (e.currentTarget.checked) {\r\n            setCheckboxes([...checkboxes, checkboxId]);\r\n        } else {\r\n            setCheckboxes(checkboxes.filter((id) => id !== checkboxId));\r\n        }\r\n    };\r\n    const removeEmp = (id) => {\r\n        const newArr = selectedEmp.filter((emp) => id !== emp.id);\r\n        setSelectedEmp(newArr);\r\n    };\r\n\r\n    const addEmp = (emp) => {\r\n        setSelectedEmp([...selectedEmp, emp]);\r\n    };\r\n\r\n    const removeCheck = (id) => {\r\n        const newArr = checkboxes.filter((selectedId) => id !== selectedId);\r\n        setCheckboxes(newArr);\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"employees\">\r\n                <h2>Employees</h2>\r\n                <div className=\"alphabet\">\r\n                    {alphabet.map((letter) => {\r\n                        const employeesArr = [];\r\n                        return (\r\n                            <div className=\"letter\" key={letter}>\r\n                                <h3>{letter}</h3>\r\n                                {employees.map((employee) => {\r\n                                    const {\r\n                                        firstName,\r\n                                        lastName,\r\n                                        id,\r\n                                    } = employee;\r\n                                    if (lastName.charAt(0) === letter) {\r\n                                        employeesArr.push(\r\n                                            `${lastName} ${firstName}`\r\n                                        );\r\n                                        return (\r\n                                            <p className=\"user\" key={id}>\r\n                                                <input\r\n                                                    id={id}\r\n                                                    type=\"checkbox\"\r\n                                                    checked={\r\n                                                        checkboxes.indexOf(\r\n                                                            id\r\n                                                        ) != -1\r\n                                                    }\r\n                                                    onChange={(e) => {\r\n                                                        let checkbox = document.getElementById(\r\n                                                            id\r\n                                                        );\r\n                                                        if (checkbox.checked) {\r\n                                                            addEmp(employee);\r\n                                                            chooseCheckbox(\r\n                                                                id,\r\n                                                                e\r\n                                                            );\r\n                                                        } else if (\r\n                                                            !checkbox.checked\r\n                                                        ) {\r\n                                                            removeEmp(id);\r\n                                                            removeCheck(id);\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                                {`${lastName} ${firstName}`}\r\n                                            </p>\r\n                                        );\r\n                                    }\r\n                                })}\r\n                                {employeesArr.length === 0 ? <p>---</p> : \"\"}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"birthday\">\r\n                <h2>Employees birthday</h2>\r\n                <hr />\r\n                {selectedEmp.length === 0 ? (\r\n                    <div>No selected employees</div>\r\n                ) : (\r\n                    months.map((current, index) => {\r\n                        const monthHolder = selectedEmp.filter(\r\n                            (emp) =>\r\n                                new Date(Date.parse(emp.dob)).getMonth() ===\r\n                                index\r\n                        );\r\n                        return (\r\n                            <div key={current}>\r\n                                {monthHolder.length === 0 ? (\r\n                                    \"\"\r\n                                ) : (\r\n                                    <div>\r\n                                        <h3>{months[index]}</h3>\r\n                                        <ul className=\"month\">\r\n                                            {monthHolder.map((emp) => {\r\n                                                const {\r\n                                                    id,\r\n                                                    lastName,\r\n                                                    firstName,\r\n                                                    dob,\r\n                                                } = emp;\r\n                                                const date = new Date(\r\n                                                    dob\r\n                                                ).toLocaleString(\"en-EN\", {\r\n                                                    year: \"numeric\",\r\n                                                    month: \"long\",\r\n                                                    day: \"numeric\",\r\n                                                });\r\n                                                return (\r\n                                                    <li\r\n                                                        key={id}\r\n                                                    >{`${lastName} ${firstName} - ${date} year`}</li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeesPage;\r\n","C:\\Users\\Tom\\Desktop\\github\\test-for-yalantis\\src\\App.js",[],{"ruleId":"17","severity":1,"message":"18","line":84,"column":59,"nodeType":"19","messageId":"20","endLine":84,"endColumn":61},{"ruleId":"21","severity":1,"message":"22","line":102,"column":59,"nodeType":"23","messageId":"24","endLine":102,"endColumn":61},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]