{"version":3,"sources":["EmployeesPage.js","App.js","index.js"],"names":["EmployeesPage","alphabet","toUpperCase","split","months","useState","employees","setEmployees","selectedEmp","setSelectedEmp","checkboxes","setCheckboxes","useEffect","fetch","then","res","json","employeesData","data","JSON","parse","localStorage","getItem","setItem","stringify","className","map","letter","employeesArr","employee","firstName","lastName","id","charAt","push","type","checked","indexOf","onChange","e","emp","checkbox","document","getElementById","checkboxId","currentTarget","filter","chooseCheckbox","newArr","removeEmp","selectedId","removeCheck","length","current","index","monthHolder","Date","dob","getMonth","date","toLocaleString","year","month","day","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.03d7dc0f.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./EmployeesPage.css\";\r\n\r\nconst EmployeesPage = () => {\r\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase().split(\"\");\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n    ];\r\n\r\n    const [employees, setEmployees] = useState([]);\r\n    const [selectedEmp, setSelectedEmp] = useState([]);\r\n    const [checkboxes, setCheckboxes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\r\n            .then((res) => res.json())\r\n            .then((employeesData) => setEmployees([...employeesData]));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let data = JSON.parse(localStorage.getItem(\"checked\"));\r\n        if (data) {\r\n            setCheckboxes(data);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"checked\", JSON.stringify(checkboxes));\r\n    }, [checkboxes]);\r\n\r\n    useEffect(() => {\r\n        let data = JSON.parse(localStorage.getItem(\"selected\"));\r\n        if (data) {\r\n            setSelectedEmp(data);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"selected\", JSON.stringify(selectedEmp));\r\n    }, [selectedEmp]);\r\n\r\n    const chooseCheckbox = (checkboxId, e) => {\r\n        if (e.currentTarget.checked) {\r\n            setCheckboxes([...checkboxes, checkboxId]);\r\n        } else {\r\n            setCheckboxes(checkboxes.filter((id) => id !== checkboxId));\r\n        }\r\n    };\r\n    const removeEmp = (id) => {\r\n        const newArr = selectedEmp.filter((emp) => id !== emp.id);\r\n        setSelectedEmp(newArr);\r\n    };\r\n\r\n    const addEmp = (emp) => {\r\n        setSelectedEmp([...selectedEmp, emp]);\r\n    };\r\n\r\n    const removeCheck = (id) => {\r\n        const newArr = checkboxes.filter((selectedId) => id !== selectedId);\r\n        setCheckboxes(newArr);\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"employees\">\r\n                <h2>Employees</h2>\r\n                <div className=\"alphabet\">\r\n                    {alphabet.map((letter) => {\r\n                        const employeesArr = [];\r\n                        return (\r\n                            <div className=\"letter\" key={letter}>\r\n                                <h3>{letter}</h3>\r\n                                {employees.map((employee) => {\r\n                                    const {\r\n                                        firstName,\r\n                                        lastName,\r\n                                        id,\r\n                                    } = employee;\r\n                                    if (lastName.charAt(0) === letter) {\r\n                                        employeesArr.push(\r\n                                            `${lastName} ${firstName}`\r\n                                        );\r\n                                        return (\r\n                                            <p className=\"user\" key={id}>\r\n                                                <input\r\n                                                    id={id}\r\n                                                    type=\"checkbox\"\r\n                                                    checked={\r\n                                                        checkboxes.indexOf(\r\n                                                            id\r\n                                                        ) != -1\r\n                                                    }\r\n                                                    onChange={(e) => {\r\n                                                        let checkbox = document.getElementById(\r\n                                                            id\r\n                                                        );\r\n                                                        if (checkbox.checked) {\r\n                                                            addEmp(employee);\r\n                                                            chooseCheckbox(\r\n                                                                id,\r\n                                                                e\r\n                                                            );\r\n                                                        } else if (\r\n                                                            !checkbox.checked\r\n                                                        ) {\r\n                                                            removeEmp(id);\r\n                                                            removeCheck(id);\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                                {`${lastName} ${firstName}`}\r\n                                            </p>\r\n                                        );\r\n                                    }\r\n                                })}\r\n                                {employeesArr.length === 0 ? <p>---</p> : \"\"}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"birthday\">\r\n                <h2>Employees birthday</h2>\r\n                <hr />\r\n                {selectedEmp.length === 0 ? (\r\n                    <div>No selected employees</div>\r\n                ) : (\r\n                    months.map((current, index) => {\r\n                        const monthHolder = selectedEmp.filter(\r\n                            (emp) =>\r\n                                new Date(Date.parse(emp.dob)).getMonth() ===\r\n                                index\r\n                        );\r\n                        return (\r\n                            <div key={current}>\r\n                                {monthHolder.length === 0 ? (\r\n                                    \"\"\r\n                                ) : (\r\n                                    <div>\r\n                                        <h3>{months[index]}</h3>\r\n                                        <ul className=\"month\">\r\n                                            {monthHolder.map((emp) => {\r\n                                                const {\r\n                                                    id,\r\n                                                    lastName,\r\n                                                    firstName,\r\n                                                    dob,\r\n                                                } = emp;\r\n                                                const date = new Date(\r\n                                                    dob\r\n                                                ).toLocaleString(\"en-EN\", {\r\n                                                    year: \"numeric\",\r\n                                                    month: \"long\",\r\n                                                    day: \"numeric\",\r\n                                                });\r\n                                                return (\r\n                                                    <li\r\n                                                        key={id}\r\n                                                    >{`${lastName} ${firstName} - ${date} year`}</li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeesPage;\r\n","import EmployeesPage from \"./EmployeesPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <EmployeesPage />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}